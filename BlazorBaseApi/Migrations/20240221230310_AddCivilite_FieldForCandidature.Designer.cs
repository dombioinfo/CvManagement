// <auto-generated />
using System;
using BlazorBaseApi;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorBaseApi.Migrations
{
    [DbContext(typeof(SqliteDbContext))]
    [Migration("20240221230310_AddCivilite_FieldForCandidature")]
    partial class AddCivilite_FieldForCandidature
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("BlazorBaseModel.Db.Adresse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Actif")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CodePostal")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CodePostal");

                    b.Property<string>("Complement")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Complement");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("TEXT");

                    b.Property<long>("PersonneId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("PersonneId");

                    b.Property<string>("Rue")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Rue");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Ville");

                    b.HasKey("Id");

                    b.HasIndex("PersonneId");

                    b.ToTable("Adresse");
                });

            modelBuilder.Entity("BlazorBaseModel.Db.Candidature", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Actif")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Annotation")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Annotation");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCandidature")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateCandidature");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateEntree")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateEntree");

                    b.Property<DateTime>("DateEntretien")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateEntretien");

                    b.Property<DateTime>("DateSortie")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateSortie");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("TEXT");

                    b.Property<long>("MetierId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("MetierId");

                    b.Property<string>("ModaliteOrientation")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ModaliteOrientation");

                    b.Property<string>("MotifRefus")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("MotifRefus");

                    b.Property<long>("PersonneId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("PersonneId");

                    b.Property<string>("PrescripteurLibelle")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("PrescripteurLibelle");

                    b.Property<string>("PrescripteurNom")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("PrescripteurNom");

                    b.Property<long>("ResultatEntretienId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ResultatEntretienId");

                    b.Property<long>("StatutId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("StatutId");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MetierId");

                    b.HasIndex("PersonneId");

                    b.HasIndex("ResultatEntretienId");

                    b.HasIndex("StatutId");

                    b.ToTable("Candidature");
                });

            modelBuilder.Entity("BlazorBaseModel.Db.Cv", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Actif")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("BlobFile")
                        .IsRequired()
                        .HasColumnType("BLOB")
                        .HasColumnName("BlobFile");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("FileName");

                    b.Property<int>("FileSize")
                        .HasColumnType("INTEGER")
                        .HasColumnName("FileSize");

                    b.Property<long>("PersonneId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("PersonneId");

                    b.Property<string>("RelativePath")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("RelativePath");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PersonneId");

                    b.ToTable("Cv");
                });

            modelBuilder.Entity("BlazorBaseModel.Db.ListeItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Actif")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Code");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultLibelle")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("DefaultLibelle");

                    b.Property<long>("ListeTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ListeTypeId");

                    b.ToTable("ListeItem");
                });

            modelBuilder.Entity("BlazorBaseModel.Db.ListeType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Actif")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Code");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultLibelle")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("DefaultLibelle");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ListeType");
                });

            modelBuilder.Entity("BlazorBaseModel.Db.Personne", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Actif")
                        .HasColumnType("INTEGER");

                    b.Property<long>("CiviliteId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CiviliteId");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateNaissance")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateNaissance");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Email");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Nom");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Prenom");

                    b.Property<string>("Tel")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Tel");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CiviliteId");

                    b.ToTable("Personnes");
                });

            modelBuilder.Entity("BlazorBaseModel.Db.Profil", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Actif")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Libelle");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Profil");
                });

            modelBuilder.Entity("BlazorBaseModel.Db.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Actif")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Age");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("Login");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Nom");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Password");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Prenom");

                    b.Property<long>("ProfilId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ProfilId");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProfilId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BlazorBaseModel.Db.Adresse", b =>
                {
                    b.HasOne("BlazorBaseModel.Db.Personne", "Personne")
                        .WithMany("Adresses")
                        .HasForeignKey("PersonneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personne");
                });

            modelBuilder.Entity("BlazorBaseModel.Db.Candidature", b =>
                {
                    b.HasOne("BlazorBaseModel.Db.ListeItem", "Metier")
                        .WithMany()
                        .HasForeignKey("MetierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorBaseModel.Db.Personne", "Personne")
                        .WithMany("Candidatures")
                        .HasForeignKey("PersonneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorBaseModel.Db.ListeItem", "ResultatEntretien")
                        .WithMany()
                        .HasForeignKey("ResultatEntretienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorBaseModel.Db.ListeItem", "Statut")
                        .WithMany()
                        .HasForeignKey("StatutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Metier");

                    b.Navigation("Personne");

                    b.Navigation("ResultatEntretien");

                    b.Navigation("Statut");
                });

            modelBuilder.Entity("BlazorBaseModel.Db.Cv", b =>
                {
                    b.HasOne("BlazorBaseModel.Db.Personne", "Personne")
                        .WithMany("Cvs")
                        .HasForeignKey("PersonneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personne");
                });

            modelBuilder.Entity("BlazorBaseModel.Db.ListeItem", b =>
                {
                    b.HasOne("BlazorBaseModel.Db.ListeType", null)
                        .WithMany("ListeItems")
                        .HasForeignKey("ListeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorBaseModel.Db.Personne", b =>
                {
                    b.HasOne("BlazorBaseModel.Db.ListeItem", "Civilite")
                        .WithMany()
                        .HasForeignKey("CiviliteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Civilite");
                });

            modelBuilder.Entity("BlazorBaseModel.Db.User", b =>
                {
                    b.HasOne("BlazorBaseModel.Db.Profil", "Profil")
                        .WithMany()
                        .HasForeignKey("ProfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profil");
                });

            modelBuilder.Entity("BlazorBaseModel.Db.ListeType", b =>
                {
                    b.Navigation("ListeItems");
                });

            modelBuilder.Entity("BlazorBaseModel.Db.Personne", b =>
                {
                    b.Navigation("Adresses");

                    b.Navigation("Candidatures");

                    b.Navigation("Cvs");
                });
#pragma warning restore 612, 618
        }
    }
}
